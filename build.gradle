plugins {
    id 'me.champeau.gradle.jmh' version '0.4.7' apply false
    id 'com.github.ben-manes.versions' version '0.20.0' apply false
    id 'org.owasp.dependencycheck' version '3.3.4' apply false
    id 'com.github.spotbugs' version '1.6.2' apply false    
    id 'io.morethan.jmhreport' version '0.8.0' apply false
}

ext {
	sesselTjonnaVersion = '1.0.7'
	simpleFlatMapperVersion = '6.4.0'
	univocityVersion = '2.8.1'

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.owasp.dependencycheck'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'maven'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    repositories {
        mavenLocal()
        jcenter()
    }

	tasks.withType(com.github.spotbugs.SpotBugsTask) {
	  reports {
	    xml.enabled false
	    html.enabled true
	  }
	}
}

configure(project(':jmh-benchmark')) {
    apply plugin: 'io.morethan.jmhreport'
    apply plugin: 'me.champeau.gradle.jmh'

    jmh {
        resultFormat = 'JSON'
        
        fork = 1
        
        jvmArgs = ['-XX:+UseG1GC', '-Xverify:none']
    }
    
    jmhReport {
        jmhResultPath = project.file("build/reports/jmh/results.json")
        jmhReportOutput = project.file("build/reports/jmh")
    }
    
    tasks.jmh.finalizedBy tasks.jmhReport
    
	configurations.all {
	    // Check for updates every build
	    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}    
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    eclipse {
        classpath {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    // Tell idea to output to build/classes/main instead of /out/
    idea {
        module {
            outputDir file('build/classes/main')
            testOutputDir file('build/classes/test')
        }
    }

	repositories {
	    mavenLocal()
	    mavenCentral()
	    jcenter()
	    maven { url "http://repo.spring.io/plugins-release/" }
	    
	}
}
